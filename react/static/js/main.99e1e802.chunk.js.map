{"version":3,"sources":["../node_modules/peerjs/dist sync","Login.js","PostList.js","Share.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Container","styled","div","Input","input","Submit","Label","label","Login","props","state","value","handleSubmit","bind","handleChange","event","preventDefault","this","history","push","store","setName","setState","target","onSubmit","onChange","type","React","Component","List","ul","ListElement","li","Header","Name","span","StyledDate","StyledFile","DownloadButton","file","valid","ownerId","onClick","peer","peerId","fileId","conn","connect","on","console","log","send","data","error","close","url","window","URL","createObjectURL","Blob","Uint8Array","buffer","length","tempLink","document","createElement","href","setAttribute","name","click","getFile","guid","PostList","rawDate","moment","format","files","map","index","key","owner","getDate","date","DropDiv","Share","fetching","shared","autobind","fetchFilesInfo","Peer","peerConfig","axios","put","process","v","uuid","indexOf","arrayBuffer","then","dataTransfer","items","i","kind","getAsFile","shareFiles","forEach","element","newShared","newShare","uuidv1","post","get","res","el","scrollIntoView","behavior","catch","onDrop","handleDrop","onDragOver","handleDragOver","ref","App","useState","loggedIn","className","path","exact","render","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.99e1e802.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 59;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  margin: 8px 240px;\r\n  padding: 40px;\r\n  background-color: #f2f2f2;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 12px 20px;\r\n  margin: 8px 0;\r\n  display: inline-block;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Submit = styled.input`\r\n  width: 100%;\r\n  background-color: #4caf50;\r\n  color: white;\r\n  padding: 14px 20px;\r\n  margin: 8px 0;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  float: left;\r\n`;\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: '' };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.history.push('/share');\r\n    this.props.store.setName(this.state.value);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <Container>\r\n          <Label>Name:</Label>\r\n          <Input value={this.state.value} onChange={this.handleChange} />\r\n          <Submit type='submit' value='Submit' />\r\n        </Container>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\n\r\nconst List = styled.ul`\r\n  text-align: left;\r\n  list-style: none;\r\n  background: #45454d;\r\n  padding: 40px;\r\n  margin: 0;\r\n`;\r\n\r\nconst ListElement = styled.li`\r\n  display: block;\r\n  color: white;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  margin-top: 12px;\r\n`;\r\n\r\nconst Name = styled.span`\r\n  font-weight: bold;\r\n  margin-right: 8px;\r\n`;\r\n\r\nconst StyledDate = styled.span`\r\n  color: grey;\r\n`;\r\n\r\nconst StyledFile = styled.div`\r\n  margin-top: 4px;\r\n  padding: 8px;\r\n  background-color: #5f5f67;\r\n  border-radius: 4px;\r\n`;\r\n\r\nfunction getFile(peer, peerId, fileId) {\r\n  if (peer !== null) {\r\n    const conn = peer.connect(peerId);\r\n    conn.on('open', () => {\r\n      console.log('send');\r\n      conn.send(fileId);\r\n      console.log('wait');\r\n\r\n      conn.on('data', function(data) {\r\n        if (data.error) {\r\n          conn.close();\r\n          return;\r\n        }\r\n        let url = window.URL.createObjectURL(\r\n          new Blob([new Uint8Array(data.buffer, 0, data.buffer.length)])\r\n        );\r\n        let tempLink = document.createElement('a');\r\n        tempLink.href = url;\r\n        tempLink.setAttribute('download', data.name);\r\n        tempLink.click();\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nfunction DownloadButton(props) {\r\n  if (!props.file.valid || props.file.ownerId === props.id) {\r\n    return null;\r\n  }\r\n  return (\r\n    <button\r\n      onClick={() =>\r\n        getFile(props.peer, props.file.ownerId, props.file.guid, props.file.valid)\r\n      }\r\n    >\r\n      Dowload\r\n    </button>\r\n  );\r\n}\r\n\r\nclass PostList extends React.Component {\r\n  getDate(rawDate) {\r\n    return moment(rawDate).format('DD/MM/YYYY, H:mm:ss');\r\n  }\r\n  render() {\r\n    return (\r\n      <List>\r\n        {this.props.files.map((file, index) => {\r\n          return (\r\n            <ListElement key={index}>\r\n              <Header>\r\n                <Name>{file.owner}</Name>\r\n                <StyledDate>{this.getDate(file.date)} {file.ownerId}</StyledDate>\r\n              </Header>\r\n              <StyledFile>\r\n                {file.name}\r\n                <DownloadButton peer={this.props.peer} file={file} id={this.props.id} />\r\n              </StyledFile>\r\n            </ListElement>\r\n          );\r\n        })}\r\n      </List>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostList;\r\n","import React from 'react';\r\nimport Peer from 'peerjs';\r\nimport axios from 'axios';\r\nimport peerConfig from './peerConfig.json';\r\nimport styled from 'styled-components';\r\nimport uuidv1 from 'uuid/v1';\r\nimport autobind from 'class-autobind';\r\nimport PostList from './PostList';\r\n\r\nconst DropDiv = styled.div`\r\n  height: 40px;\r\n  background-color: gray;\r\n  color: white;\r\n  font-weight: bold;\r\n  padding-top: 8px;\r\n`;\r\n\r\nclass Share extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fetching: false,\r\n      peer: null,\r\n      id: -1,\r\n      files: [],\r\n      shared: [],\r\n    };\r\n    autobind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.store.name === null) {\r\n      this.props.history.push('/');\r\n      return;\r\n    }\r\n\r\n    this.fetchFilesInfo();\r\n\r\n    const peer = new Peer(peerConfig);\r\n    peer.on('open', (id) => {\r\n      axios.put(`${process.env.REACT_APP_BACKEND_URL}/users/`, {\r\n        name: this.props.store.name,\r\n        id,\r\n      });\r\n      console.log(`User id: ${id}`);\r\n      this.setState({ peer, id });\r\n    });\r\n\r\n    peer.on('connection', (conn) => {\r\n      // send requested file\r\n      conn.on('data', (data) => {\r\n        // check if file with uuid=data is shared if so send it else send empty file\r\n        const index = this.state.shared.map((v) => v.uuid).indexOf(data);\r\n        // if file is not shared\r\n        if (index === -1) {\r\n          console.error(\"Requested file does'nt exist!\");\r\n          conn.send({ error: true });\r\n          return;\r\n        }\r\n        console.log(`Send buffer`);\r\n        let name = this.state.shared[index].file.name;\r\n        console.log(`Send ${this.state.shared[index].file.name}`);\r\n        this.state.shared[index].file.arrayBuffer().then((buffer) => {\r\n          console.log(`Send buffer`);\r\n          conn.send({ name, buffer });\r\n          console.log(`Close`);\r\n          // conn.close();\r\n        });\r\n      });\r\n    });\r\n\r\n    this.setState({ fetching: true });\r\n  }\r\n\r\n\r\n\r\n  handleDrop(event) {\r\n    event.preventDefault();\r\n    let files = null;\r\n    if (event.dataTransfer.items) {\r\n      files = [];\r\n      for (let i = 0; i < event.dataTransfer.items.length; i++) {\r\n        if (event.dataTransfer.items[i].kind === 'file') {\r\n          files.push(event.dataTransfer.items[i].getAsFile());\r\n        }\r\n      }\r\n    } else {\r\n      files = event.dataTransfer.files;\r\n    }\r\n    this.shareFiles(files, this.props.store.name);\r\n    files.forEach((element) => {\r\n      console.log('file.name = ' + element.name);\r\n    });\r\n  }\r\n\r\n  shareFiles(files, name) {\r\n    let newShared = [...this.state.shared];\r\n    files.forEach((file) => {\r\n      let newShare = { file, uuid: uuidv1() };\r\n      newShared.push(newShare);\r\n      axios\r\n        .post(`${process.env.REACT_APP_BACKEND_URL}/files/`, {\r\n          owner: name,\r\n          name: file.name,\r\n          guid: newShare.uuid,\r\n        })\r\n        .then(() => {\r\n          this.fetchFilesInfo();\r\n        });\r\n    });\r\n    this.setState({ shared: newShared });\r\n  }\r\n\r\n  fetchFilesInfo() {\r\n    axios\r\n      .get(`${process.env.REACT_APP_BACKEND_URL}/files/`)\r\n      .then((res) => {\r\n        this.setState({ files: res.data, fetching: false });\r\n        this.el.scrollIntoView({ behavior: 'smooth' });\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Got error: ${error}`);\r\n        this.setState({ fetching: false, error });\r\n      });\r\n  }\r\n\r\n  handleDragOver(event) {\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.fetching ? <h1>'Fetching'</h1> : null}\r\n        <PostList peer={this.state.peer} files={this.state.files} id={this.state.id} />\r\n        <DropDiv\r\n          onDrop={this.handleDrop}\r\n          onDragOver={this.handleDragOver}\r\n          ref={(el) => {\r\n            this.el = el;\r\n          }}\r\n        >\r\n          Drop files to upload\r\n        </DropDiv>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Share;\r\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Login from './Login';\nimport Share from './Share';\nimport './App.css';\n\nfunction App() {\n  const [state, setState] = useState({\n    name: null,\n    loggedIn: false,\n    setName: (name) => setState({ ...state, name }),\n  });\n\n\n  return (\n    <div className='App'>\n      <Router>\n        <Route\n          path='/'\n          exact\n          render={(props) => <Login {...props} store={state} />}\n        />\n        <Route\n          path='/share'\n          exact\n          render={(props) => <Share {...props} store={state} />}\n        />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}